/**
 * This is a file that can be imported into .scss files in order to use the utilities described below.
 * 
 * NOTE: SCSS does not provide a global definition of mixins and functions,
 * so it necessary to add imports to each styles file in which it will be used.
 */

/** *************************************************************************************************
 * PUBLIC UTILITIES
 */

/**
 * Converts HEX to HSL and registrate generated color in the target selector as css variable.
 *
 * Usage example (regardless of the location of styles file):
 *
 * @use 'colors';
 * ...
 * @include defineColorHslByHex(--success-color, #00a2dd);
 */
@mixin defineColorHslByHex($color-variable, $hex) {
  $hue: hue($hex);
  $saturation: saturation($hex);
  $lightness: lightness($hex);

  #{$color-variable}: unquote('hsl(#{$hue}, #{$saturation}, #{$lightness})');
  #{$color-variable}-h: #{$hue};
  #{$color-variable}-s: #{$saturation};
  #{$color-variable}-l: #{$lightness};
}

/**
 * Sets HSL color saturation.
 *
 * Usage example (regardless of the location of styles file):
 *
 * @use 'colors';
 * ...
 * background-color: colors.setSaturation(var(--success-color), 1.2);
 */
@function setSaturation($color-variable, $saturationMultiplier) {
  $color-variable: -get-variable-name($color-variable);
  $color-h: var(#{$color-variable + '-h'});
  $color-s: var(#{$color-variable + '-s'});
  $color-l: var(#{$color-variable + '-l'});
  @return hsl($color-h, calc(#{$color-s} * #{$saturationMultiplier}), $color-l);
}

/**
 * Sets HSL color lightness.
 *
 * Usage example (regardless of the location of styles file):
 *
 * @use 'colors';
 * ...
 * background-color: colors.setLightness(var(--success-color), 1.1);
 */
@function setLightness($color-variable, $lightnessMultiplier) {
  $color-variable: -get-variable-name($color-variable);
  $color-h: var(#{$color-variable + '-h'});
  $color-s: var(#{$color-variable + '-s'});
  $color-l: var(#{$color-variable + '-l'});
  @return hsl($color-h, $color-s, calc(#{$color-l} * #{$lightnessMultiplier}));
}

/**
 * Sets HSL color alpha.
 *
 * Usage example (regardless of the location of styles file):
 *
 * @use 'colors';
 * ...
 * background-color: colors.setAlpha(var(--success-color), 0.5);
 */
@function setAlpha($color-variable, $opacity) {
  $color-variable: -get-variable-name($color-variable);
  $color-h: var(#{$color-variable + '-h'});
  $color-s: var(#{$color-variable + '-s'});
  $color-l: var(#{$color-variable + '-l'});
  @return hsla($color-h, $color-s, $color-l, $opacity);
}

/** *************************************************************************************************
 * PRIVATE UTILITIES
 */

/**
 * Removes 'var(' and ')' from variable.
 */
@function -get-variable-name($variable) {
  $variable: -str-replace($variable, 'var(');
  $variable: -str-replace($variable, ')');
  @return $variable;
}

/**
 * Finds and replaces a value in a string.
 */
@function -str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace +
      -str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}
